buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'maven-publish'

version = '1.18.2-1.1.4.4'
group = 'io.redspace.ironsspellbooks'
archivesBaseName = 'irons_spellbooks'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.

    //mappings channel: 'official', version: '1.18.2'

    mappings channel: 'parchment', version: "2022.11.06-1.18.2"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'irons_spellbooks'

            mods {
                irons_spellbooks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'irons_spellbooks'

            mods {
                irons_spellbooks {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'irons_spellbooks'

            mods {
                irons_spellbooks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'irons_spellbooks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                irons_spellbooks {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    flatDir {
        dir 'libs'
    }

    maven { url = "https://maven.enginehub.org/repo/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.kosmx.dev/" }

    //    maven {
    //        name "REI"
    //        url "https://maven.shedaniel.me"
    //    }

    //    maven {
    //        name "Modding Legacy Maven (Structure Gel)"
    //        url "https://maven.moddinglegacy.com/maven"
    //    }
}

dependencies {
    //compileOnly will not load mod when running from IntelliJ
    //runtimeOnly will load the mod but can't link to it in code
    //implementation both

    // FORGE ******************************************************************************************************
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // MIXINS *****************************************************************************************************
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // GECKOLIB ***************************************************************************************************
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${geckolib_version}")

    // CAELUS *****************************************************************************************************
    compileOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:${caelus_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:${caelus_version}")

    // PLAYER ANIMATOR ********************************************************************************************
    // https://github.com/KosmX/minecraftPlayerAnimator
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}")

    // TETRA ******************************************************************************************************
    implementation fg.deobf("se.mickelus.mutil:mutil:${minecraft_version}-${mutil_version}")
    implementation fg.deobf("curse.maven:tetra-${tetra_version}")
    // If you want to run without tetra in dev comment the above 2 lines and uncomment the following line
    // compileOnly fg.deobf("curse.maven:tetra-${tetra_version}")

    // JEI ********************************************************************************************************
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))

    // CURIOS *****************************************************************************************************
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

    // JSON ******************************************************************************************************
    implementation "com.google.code.gson:gson:${gson_version}"

    // LOCAL LIBS FOR TESTING (put the jar in /libs/ folder
    //Dimensional-Threading-Reforged-1.19.2-1.2.7.jar
    //runtimeOnly fg.deobf('wearblackallday.dimthread:Dimensional-Threading-Reforged:1.19.2-1.2.7')

    //RoughlyEnoughItems-9.1.595.jar
    //    implementation fg.deobf("dev.architectury:architectury-forge:6.5.82")
    //    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:8.2.88")
    //    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:9.1.595")
    //    runtimeOnly fg.deobf('me.shedaniel:RoughlyEnoughItems-plugin-compatibilities-forge:9.0.480')

    //valhelsia_structures-forge-1.19.2-1.0.2.jar
    //runtimeOnly fg.deobf('com.stal111.valhelsia_structures:valhelsia_core-forge:1.19.2-0.5.0')
    //runtimeOnly fg.deobf('com.stal111.valhelsia_structures:valhelsia_structures-forge:1.19.2-1.0.2')

    //Apotheosis
    //    runtimeOnly fg.deobf('shadows:Apotheosis:1.19.2-6.1.5')
    //    runtimeOnly fg.deobf('shadows:Placebo:1.19.2-7.1.8')
    //    runtimeOnly fg.deobf('vazkii:Patchouli:1.19.2-77')
    //runtimeOnly fg.deobf('me.shedaniel:REIPluginCompatibilities-forge:9.0.48')

    //Blue Skies
    //runtimeOnly fg.deobf('com.legacy:blue_skies:1.19.2-1.3.20')
    //implementation fg.deobf("com.legacy:structure-gel:1.19.2-2.7.2")

    //    for ( File file : fileTree(dir: 'libs', include: '*.jar') ) {
    //        runtimeOnly files(file)
    //    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Iron's Spells N Spellbooks",
                "Specification-Vendor"    : "Iron431",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Iron431",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "mixins.irons_spellbooks.json"
        ])
    }
    exclude('**/*.psd')
    exclude('**/*.bbmodel')
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project ], dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

java {
    withSourcesJar()
    //withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name = "redspace"
            url uri("https://code.redspace.io/releases")
            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASS")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.register('copyAnimations', Copy) {
    from 'src/main/resources/assets/irons_spellbooks/player_animation'
    include 'casting_animations.json'
    into 'src/main/resources/assets/irons_spellbooks/animations'
}

tasks.classes.dependsOn(tasks.copyAnimations)


mixin {
    add sourceSets.main, 'irons_spellbooks.refmap.json'
    config 'mixins.irons_spellbooks.json'
}
